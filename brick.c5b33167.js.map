{"version":3,"sources":["src/Measurable.js","src/Ball.js","src/Player.js","src/Block.js","src/Game.js","index.js"],"names":["Measurable","tag","target","match","x","width","y","height","offsetWidth","offsetHeight","offsetLeft","style","left","offsetTop","top","Ball","game","document","querySelector","Math","floor","random","start","scale","colideSceneTop","colideSceneBottom","colideSceneLeft","colideSceneRight","colideWithBlocks","colideWithPlayer","player","colideWith","console","log","abs","error","reset","startRandom","setTimeout","Player","Block","destroyed","parentNode","removeChild","Game","ball","update","e","key","clear","moveLeft","moveRight","stageTag","sceneTag","blocks","querySelectorAll","forEach","block","push","addEventListener","movePlayer","playingInterval","setInterval","collided","play"],"mappings":"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","file":"brick.c5b33167.js","sourceRoot":"..","sourcesContent":["class Measurable {\n\tconstructor(tag){\n\t\tthis.tag = tag;\n\t}\n\n\tcolideWith(target){\n\t\t// if(target instanceof Measurable){\n\t\t\tconst match = !(target.x > (this.x + this.width) ||\n\t           (target.x + target.width) < this.x ||\n\t           target.y > (this.x + this.height) ||\n\t           (target.y + target.height) < this.y);\n\n\t\t\treturn match;\n\t\t// }\n\t\t// return false;\n\t}\n\n\tget width (){\n\t\treturn this.tag.offsetWidth;\n\t}\n\tget height (){\n\t\treturn this.tag.offsetHeight;\n\t}\n\n\tget x (){\n\t\treturn this.tag.offsetLeft;\n\t}\n\tset x (x){\n\t\tthis.tag.style.left = x + 'px';\n\t}\n\n\tget y (){\n\t\treturn this.tag.offsetTop;\n\t}\n\tset y (y){\n\t\tthis.tag.style.top = y + 'px';\n\t}\n}\n\nexport { Measurable as default };\n","import Measurable from \"./Measurable\";\n\nclass Ball extends Measurable {\n\tconstructor(game) {\n\t\tsuper(document.querySelector('.Ball'));\n\n\t\tthis.game = game;\n\t\tthis.reset();\n\t\tthis.scale = 5;\n\t}\n\n\treset = ()=>{\n\t\tthis.x = this.game.width/2 - this.width/2;\n\t\tthis.y = this.game.height - 120;\n\t}\n\n\tupdate = ()=>{\n\t}\n\n\tstartRandom = ()=>{\n\t\tconst x = Math.floor(Math.random() * 2)-1;\n\t\tconst y = Math.floor(Math.random() * 2)-1;\n\n\t\tthis.start(x>0?this.scale:-this.scale, y>0?this.scale:-this.scale);\n\t}\n\n\tstart = (x, y)=>{\n\t\tthis.x += x;\n\t\tthis.y += y;\n\n\t\tconst colideSceneTop = this.y <= 0;\n\t\tconst colideSceneBottom = this.y >= this.game.height-this.height;\n\t\tconst colideSceneLeft = this.x <= 0;\n\t\tconst colideSceneRight = this.x >= this.game.width-this.width;\n\n\t\tconst colideWithBlocks = this.game.colideWithBlocks();\n\t\tconst colideWithPlayer = this.game.player.colideWith(this);\n\n\t\tif(colideWithBlocks){\n\t\t\ty = -y;\n\t\t\tx = -x;\n\t\t}\n\t\t\n\t\tif(colideWithPlayer < 0){\n\t\t\tconsole.log('<0');\n\t\t\tx = Math.abs(x)*-1;\n\t\t\ty = -y;\n\t\t}\n\t\tif(colideWithPlayer > 0){\n\t\t\tconsole.log('>0');\n\t\t\tx = Math.abs(x);\n\t\t\ty = -y;\n\t\t}\n\n\t\tif(colideSceneTop){\n\t\t\ty = -y;\n\t\t}\n\t\tif(colideSceneLeft || colideSceneRight){\n\t\t\tx = -x;\n\t\t}\n\t\tif(colideSceneBottom){\n\t\t\tconsole.error(\"DEAD!!!\");\n\t\t\tthis.reset();\n\t\t\tthis.startRandom();\n\t\t\treturn;\n\t\t}\n\n\t\tsetTimeout(()=>{\n\t\t\tthis.start(x, y)\n\t\t},1000/20)\n\t}\n}\n\nexport {Ball as default};\n","import Measurable from \"./Measurable\";\n\nclass Player extends Measurable  {\n\tconstructor(game) {\n\t\tsuper(document.querySelector('.Player'));\n\t\tthis.game = game;\n\t}\n\n\tmoveLeft(){\n\t\tthis.x -= 20;\n\n\t\tif(this.x < 0){\n\t\t\tthis.x = 0;\n\t\t}\n\t}\n\tmoveRight(){\n\t\tthis.x += 20;\n\n\t\tif(this.x+this.width > this.game.width){\n\t\t\tthis.x = this.game.width-this.width;\n\t\t}\n\t}\n\tcolideWith(target){\n\t\tconsole.log('>',target,target.colideWith(this));\n\t\tsuper.colideWith(target);\n\t}\n\n\t// colideWith = (ball)=>{\n\t//\n\t// \t// const left = {x: this.x, y:this.y, width: this.width/2, height: this.height};\n\t// \t// const right = {x: this.x+this.width/2, y:this.y, width: this.width/2, height: this.height};\n\t//   //\n\t//   //\n\t// \t// const matchLeft = Collision.between(ball, left);\n\t// \t// const matchRight = Collision.between(ball, right);\n\t//   //\n\t//   //  if(matchLeft)\n\t// \t// \treturn -1;\n\t//   //\n\t//   // if(matchRight)\n\t// \t//   return 1;\n\t//\n\t// \treturn Collision.between(ball, this);\n\t// }\n}\n\nexport {Player as default};\n","import Measurable from \"./Measurable\";\n\nclass Block extends Measurable {\n\tconstructor(game, tag) {\n\t\tsuper(tag);\n\n\t\tthis.game = game;\n\t\tthis.destroyed = false;\n\t}\n\n\tcolideWith(target){\n\t\tconst match = super.colideWith(target);\n\n\t\tif(match){\n\t\t\tthis.destroyed = true;\n\t\t\tthis.tag.parentNode.removeChild(this.tag);\n\t\t}\n\n\t\treturn match;\n\t}\n}\n\nexport {Block as default};\n","import Ball from './Ball';\nimport Player from './Player';\nimport Block from './Block';\n\nclass Game {\n\tconstructor(){\n\t\tthis.stageTag = document.querySelector('.Stage');\n\t\tthis.sceneTag = document.querySelector('.Scene');\n\n\t\tthis.blocks = [];\n\t\tthis.ball = new Ball(this);\n\t\tthis.player = new Player(this);\n\n\t\tdocument.querySelectorAll('.Block').forEach((block) => {\n\t\t\tthis.blocks.push(new Block(this, block));\n\t\t});\n\n\t\tdocument.addEventListener(\"keydown\", e => this.movePlayer(e));\n\n\t\tthis.ball.startRandom();\n\n\t\tthis.playingInterval = setInterval(this.update, 1000/60);\n\t}\n\n\tplay = ()=>{\n\t\tconsole.log('play');\n\t\t// this.ball.update();\n\t}\n\tupdate = ()=>{\n\t\tthis.ball.update();\n\t}\n\n\tmovePlayer = (e)=>{\n\t\tswitch (e.key) {\n\t\t\tcase \"ArrowUp\":\n\t\t\t\tconsole.clear();\n\t\t\tbreak;\n\t\t\tcase \"ArrowDown\":\n\t\t\t\tconsole.clear();\n\t\t\tbreak;\n\t\t\tcase \"ArrowLeft\":\n\t\t\t\tthis.player.moveLeft();\n\t\t\tbreak;\n\t\t\tcase \"ArrowRight\":\n\t\t\t\tthis.player.moveRight();\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tcolideWithBlocks(){\n\t\tfor(const block of this.blocks){\n\t\t\tif(!block.destroyed){\n\t\t\t\tconst collided = block.colideWith(this.ball);\n\t\t\t\tif(collided){\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\treturn false;\n\t}\n\n\tget width (){\n\t\treturn this.sceneTag.offsetWidth;\n\t}\n\tget height (){\n\t\treturn this.sceneTag.offsetHeight;\n\t}\n\tget scaleX (){\n\t\treturn document.querySelector('.Ball').offsetWidth;\n\t}\n\tget scaleY (){\n\t\treturn document.querySelector('.Ball').offsetHeight;\n\t}\n}\n\nexport { Game as default };\n","import Game from './src/Game'\n\nconst game = new Game();\ngame.play();\n"]}